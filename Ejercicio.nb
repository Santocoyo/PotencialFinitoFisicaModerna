(*Potencial escalÃ³n finito*)
Needs["Graphics`Legend`"]
Clear["Global`*"]
\[Psi]L [x_] = E^(I kL x) + E^(-I kL x) R
kLRule = kL -> Sqrt[2] Sqrt[(En m)/\[HBar]^2]
\[Psi]R[x_] = E^(I kR x)  T
kRRule = kR -> Sqrt[2] Sqrt[((En - V0) m)/\[HBar]^2]
boundary = {\[Psi]L[x] == \[Psi]R[x], \[Psi]L'[x] == \[Psi]R'[x]} /. 
  x -> 0
RTrule = Solve[boundary, {R, T}] // Flatten // Simplify
SuperStar[exp_] := exp /. {Complex[a_, b_] :> Complex[a, -b]}
\[Del]f_ := D[f, #] & /@ {x, y, z}
flux[\[Psi]_] := \[HBar]/(
   2 I m) (SuperStar[\[Psi]] \[Del]\[Psi] - \[Del]SuperStar[\[Psi]] \
\[Psi]) // Simplify
\[Psi]L[x] // flux // Simplify
incFlux = flux[\[Psi]L[x]] /. {R -> 0}
Rflux = (incFlux - flux[\[Psi]L[x]]) // Simplify
Tflux = flux[\[Psi]R[x]]
RR = Rflux[[1]]/incFlux[[1]] /. RTrule
TT = Tflux[[1]]/incFlux[[1]] /. RTrule
RR + TT // Simplify
values = {m -> 1, \[HBar] -> 1, V0 -> 1}
Plot[{RR, TT, TT + RR} /. RTrule /. kLRule /. kRRule /. values // 
  Evaluate, {En, 1, 2}, AxesLabel -> {"E", "Coeficientes"}, 
 PlotStyle -> {Dashing[{0.06, 0.02}], Dashing[{0.02}], {}}, 
 PlotLegend -> {"RR", "TT", "TT+RR"}, LegendPosition -> {1, -1/2}, 
 PlotRange -> {0, 1}]
kRule = {kLRule, kRRule}
wave[x_, En_] = {\[Psi]L[x], \[Psi]R[x]} /. RTrule /. kRule /. 
    values // Simplify;
\[Psi][x_, En_] := 
 Which[x <= 0, wave[x, En][[1]], x > 0, wave[x, En][[2]]]
waveplot2D[Energy_] := 
 Plot[{\[Psi][x, Energy] // Re, \[Psi][x, Energy] // Im}, {x, -10, 
   20}, PlotStyle -> {{}, Dashing[{0.02}]}, AxesLabel -> {"x", "y"}]
waveplot2D[1.1]
waveplot2D[0.9]
waveplot2D[0.5]
(*Potencial pozo finito*)
Clear["Global`*"]
schrodeq = 0 == (V - En) \[Psi][x] - (\[HBar]^2 \[Psi]''[x])/(2 m);
EWrule = {En -> (kW^2 \[HBar]^2)/(2 m) + V}
\[Psi][x] /. DSolve[schrodeq, \[Psi][x], x][[1]] /. EWrule // 
   ExpToTrig // Simplify // PowerExpand
kWrule = kW -> (Sqrt[2] Sqrt[m (En - V)])/\[HBar] /. V -> -V0 /. 
  En -> -Wn
\[Psi]W[x_] = cSym Cos[kW x] + cAsym Sin[kW x]
ELRrule = {En -> (kLR^2 \[HBar]^2)/(2 m)}
\[Psi][x] /. DSolve[schrodeq, \[Psi][x], x][[1]] /. V -> 0 /. 
   ELRrule // Simplify // PowerExpand
kLRrule = 
 kLR -> (Sqrt[2] Sqrt[En m])/\[HBar] /. En -> -Wn // PowerExpand
qLRrule = qLR -> (Sqrt[2] Sqrt[Wn m])/\[HBar]
\[Psi][x] /. DSolve[schrodeq, \[Psi][x], x][[1]] /. V -> 0 /. 
    ELRrule /. kLR -> I qRL // Simplify // PowerExpand
\[Psi]R[x_] = cR E^(-qLR x) ; (*x > a*)
\[Psi]L[x_] = cL E^(+qLR x) ; (*x < -a*)
eq1 = {(\[Psi]L[x] - \[Psi]W[x] == 
     0) /. {x -> -a}, (\[Psi]W[x] - \[Psi]R[x] == 
     0) /. {x -> +a}, (\[Psi]L '[x] - \[Psi]W '[x] == 
     0) /. {x -> -a}, (\[Psi]W '[x] - \[Psi]R '[x] == 0) /. {x -> +a}}
(eq2 = eq1 /. cAsym -> 0) // ColumnForm
eq3 = Reduce[{eq2, cL != 0, cR != 0, kW != 0, qLR != 0, cSym != 0, 
    Cos[a kW] != 0} // Flatten, {cL, cR}]; eq3 // ColumnForm
symSol = Solve[eq3, {cL, cR}] // Simplify // Flatten
symEn = Tan[a kW] == qLR /kW
eq4 = Reduce[{eq1 /. cSym -> 0, cL != 0, cR != 0, kW != 0, qLR != 0, 
    cAsym != 0, Cos[a kW] != 0} // Flatten, {cL, 
   cR}]; eq4 // ColumnForm
asymSol = Solve[eq4, {cL, cR}] // Simplify // Flatten
asymEn = Tan[a kW] == -kW/qLR
values = {a -> 1, m -> 1, \[HBar] -> 1, 
  V0 -> {100, 200, 500, \[Infinity]}}
nRule = Wn -> V0 - (n^2 \[Pi]^2 \[HBar]^2)/(8 a^2 m)
kRules = {kW -> (Sqrt[2] Sqrt[m (V0 - Wn)])/\[HBar], 
  qLR -> (Sqrt[2] Sqrt[m (Wn)])/\[HBar]}
eq5 = symEn /. kRules /. nRule // PowerExpand
pt1 = Plot[{ArcTan[eq5[[1]]], ArcTan[eq5[[2]]]} /. values // 
    Evaluate, {n, 0, 9}, Frame -> True, 
   FrameTicks -> {{{1, "n=1"}, {3, "n=3"}, {5, "n=5"}, {7, "n=7"}, {9,
        "n=9"}}, {0, 0.5, 1, 1.5}}, PlotRange -> {0.4, 1.6}, 
   DisplayFunction -> Identity];
text = {Text["V0=\[Infinity]", {6, 1.5}], Text["V0=500", {6, 1.3}], 
   Text["V0=200", {6, 1.1}], Text["V0=100", {6, 0.8}]};
Show[pt1, Graphics[text], GridLines -> Automatic, 
 DisplayFunction -> $DisplayFunction]
eq6 = asymEn /. kRules /. nRule // PowerExpand
text = {Text["V0=\[Infinity]", {7, 0}], Text["V0=500", {7, -0.4}], 
   Text["V0=200", {7, -0.7}], Text["V0=100", {7, -0.9}]};
Plot[{ArcTan[eq6[[1]]], ArcTan[eq6[[2]]]} /. values // Evaluate, {n, 
  0, 9}, Frame -> True, 
 FrameTicks -> {{{2, "n=2"}, {4, "n=4"}, {6, "n=6"}, {8, 
     "n=8"}}, {-1.5, -1, 0, 0.5, 1, 1.5}}, PlotRange -> {-1, 0.1}, 
 GridLines -> Automatic, Epilog -> text]
